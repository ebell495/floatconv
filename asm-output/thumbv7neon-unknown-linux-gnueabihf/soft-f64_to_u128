floatconv::soft::f64_to_u128:
 mov     r2, r0
 movs    r0, #0
 movt    r0, #16368
 cmp     r1, r0
 bhs     <label>
 movs    r0, #0
 movs    r1, #0
 movs    r2, #0
 movs    r3, #0
 bx      lr
<label>:
 movs    r0, #0
 movt    r0, #18416
 cmp     r1, r0
 bhs     <label>
 push.w  {r4, r5, r6, r7, r8, r9, lr}
 lsls    r0, r1, #11
 lsls    r5, r2, #11
 orr.w   r0, r0, r2, lsr, #21
 mov.w   lr, #0
 orr     r3, r0, #-2147483648
 movs    r0, #126
 sub.w   r0, r0, r1, lsr, #20
 and     r12, r0, #127
 rsb.w   r1, r12, #32
 sub.w   r9, r12, #64
 lsr.w   r2, r5, r12
 subs.w  r8, r12, #32
 lsl.w   r0, r3, r1
 orr.w   r2, r2, r0
 rsb.w   r0, r12, #96
 rsb.w   r6, r12, #64
 it      pl
 lsrpl.w r2, r3, r8
 cmp.w   r12, #64
 lsl.w   r0, r3, r0
 lsr.w   r7, r5, r9
 it      hs
 movhs   r2, lr
 orrs    r7, r0
 subs.w  r4, r12, #96
 lsl.w   r0, r5, r6
 it      pl
 lsrpl.w r7, r3, r4
 cmp     r1, #0
 it      pl
 movpl   r0, #0
 cmp.w   r12, #64
 it      hs
 movhs   r0, r7
 lsl.w   r7, r3, r6
 rsb.w   r6, r6, #32
 cmp.w   r12, #0
 it      eq
 moveq   r0, r12
 cmp     r1, #0
 lsr.w   r6, r5, r6
 orr.w   r6, r6, r7
 it      pl
 lslpl.w r6, r5, r1
 lsr.w   r1, r3, r9
 cmp     r4, #0
 it      pl
 movpl   r1, #0
 cmp.w   r12, #64
 it      lo
 movlo   r1, r6
 cmp.w   r12, #0
 lsr.w   r3, r3, r12
 it      eq
 moveq   r1, r12
 cmp.w   r8, #0
 it      pl
 movpl   r3, #0
 cmp.w   r12, #64
 it      hs
 movhs   r3, lr
 pop.w   {r4, r5, r6, r7, r8, r9, pc}
<label>:
 movs    r3, #0
 movs    r0, #0
 subs    r2, #1
 movt    r3, #32752
 sbcs    r1, r3
 it      lo
 movlo   r0, #1
 cmp     r0, #0
 it      ne
 movne.w r0, #-1
 mov     r1, r0
 mov     r2, r0
 mov     r3, r0
 bx      lr
