floatconv::soft::i128_to_f32:
 push.w  {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, #24
 adds.w  r4, r0, r3, asr, #31
 strd    r1, r2, [sp, #12]
 adcs.w  r5, r1, r3, asr, #31
 eor.w   r4, r4, r3, asr, #31
 adcs.w  r7, r2, r3, asr, #31
 str     r0, [sp, #20]
 eor.w   r8, r7, r3, asr, #31
 clz     r0, r4
 clz     r2, r8
 mov     r12, r3
 add.w   lr, r2, #32
 adc.w   r2, r3, r3, asr, #31
 eor.w   r9, r2, r3, asr, #31
 eor.w   r3, r5, r3, asr, #31
 cmp.w   r9, #0
 it      ne
 clzne   lr, r9
 adds    r0, #32
 cmp     r3, #0
 it      ne
 clzne   r0, r3
 orrs.w  r1, r8, r9
 it      eq
 addeq.w lr, r0, #64
 and     r6, lr, #127
 rsb.w   r1, r6, #64
 str     r1, [sp, #4]
 rsb.w   r0, r1, #32
 rsbs.w  r10, r6, #32
 lsr.w   r1, r4, r1
 sub.w   r5, r6, #64
 lsl.w   r0, r3, r0
 orr.w   r1, r1, r0
 it      pl
 lsrpl.w r1, r3, r10
 lsl.w   r0, r8, r6
 subs.w  r2, r6, #32
 it      pl
 movpl   r0, #0
 str     r5, [sp]
 subs.w  r7, r6, #96
 lsl.w   r5, r4, r5
 str     r7, [sp, #8]
 it      pl
 movpl   r5, #0
 cmp     r6, #64
 it      lo
 orrlo.w r5, r0, r1
 cmp     r6, #0
 lsl.w   r0, r4, r6
 it      eq
 moveq   r5, r8
 cmp     r2, #0
 it      pl
 movpl   r0, #0
 mov     r1, r5
 cmp     r6, #64
 it      lo
 orrlo   r1, r0
 lsl.w   r0, r3, r6
 lsr.w   r11, r4, r10
 orr.w   r0, r0, r11
 cmp     r2, #0
 it      pl
 lslpl.w r0, r4, r2
 lsl.w   r11, r9, r6
 cmp     r6, #64
 it      lo
 orrlo   r1, r0
 lsr.w   r0, r8, r10
 orr.w   r11, r11, r0
 cmp     r2, #0
 it      pl
 lslpl.w r11, r8, r2
 ldr     r0, [sp, #4]
 cmp.w   r10, #0
 rsb.w   r7, r6, #96
 lsr.w   r2, r3, r0
 lsr.w   r7, r4, r7
 it      pl
 movpl   r2, #0
 ldr     r0, [sp]
 lsl.w   r8, r3, r0
 ldr     r0, [sp, #8]
 orr.w   r7, r7, r8
 cmp     r0, #0
 it      pl
 lslpl.w r7, r4, r0
 cmp     r6, #64
 it      lo
 orrlo.w r7, r11, r2
 lsrs    r0, r5, #8
 cmp     r6, #0
 it      eq
 moveq   r7, r9
 orr.w   r0, r0, r7, lsl, #24
 cmp     r1, #0
 lsr.w   r1, r0, #31
 it      ne
 orrne   r0, r0, #1
 bic.w   r1, r1, r7, lsr, #8
 ldrd    r5, r6, [sp, #16]
 ldr     r2, [sp, #12]
 subs    r0, r0, r1
 lsrs    r1, r7, #8
 orrs    r6, r5
 sub.w   r1, r1, lr, lsl, #23
 orr.w   r2, r2, r12
 add.w   r1, r1, #2122317824
 orrs    r2, r6
 it      eq
 lsreq   r1, r7, #8
 add.w   r0, r1, r0, lsr, #31
 and     r1, r12, #-2147483648
 orrs    r0, r1
 add     sp, #24
 pop.w   {r4, r5, r6, r7, r8, r9, r10, r11, pc}
