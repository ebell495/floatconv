floatconv::soft::f64_to_i128:
 movs    r3, #0
 bic     r2, r1, #-2147483648
 movt    r3, #16368
 cmp     r2, r3
 blo.w   <label>
 movs    r3, #0
 movt    r3, #18400
 cmp     r2, r3
 bhs     <label>
 push.w  {r4, r5, r6, r7, r8, r9, r10, lr}
 lsls    r2, r1, #11
 lsls    r6, r0, #11
 orr.w   r2, r2, r0, lsr, #21
 mov.w   r8, #0
 orr     r3, r2, #-2147483648
 movs    r2, #126
 sub.w   r2, r2, r1, lsr, #20
 and     r2, r2, #127
 rsb.w   r9, r2, #32
 subs.w  r12, r2, #32
 lsr.w   r0, r6, r2
 sub.w   r4, r2, #64
 lsl.w   r7, r3, r9
 orr.w   lr, r0, r7
 rsb.w   r7, r2, #64
 it      pl
 lsrpl.w lr, r3, r12
 rsb.w   r0, r7, #32
 cmp     r2, #64
 lsl.w   r5, r3, r7
 it      hs
 movhs   lr, r8
 lsr.w   r0, r6, r0
 cmp.w   r9, #0
 orr.w   r0, r0, r5
 lsr.w   r5, r3, r4
 it      pl
 lslpl.w r0, r6, r9
 subs.w  r10, r2, #96
 it      pl
 movpl   r5, #0
 cmp     r2, #64
 it      lo
 movlo   r5, r0
 rsb.w   r0, r2, #96
 cmp     r2, #0
 it      eq
 moveq   r5, r2
 lsl.w   r0, r3, r0
 lsr.w   r4, r6, r4
 orrs    r0, r4
 cmp.w   r10, #0
 it      pl
 lsrpl.w r0, r3, r10
 lsl.w   r4, r6, r7
 cmp.w   r9, #0
 it      pl
 movpl   r4, #0
 cmp     r2, #64
 it      hs
 movhs   r4, r0
 cmp     r2, #0
 it      eq
 moveq   r4, r2
 lsr.w   r6, r3, r2
 cmp.w   r12, #0
 it      pl
 movpl   r6, #0
 cmp     r2, #64
 it      hs
 movhs   r6, r8
 rsbs    r0, r4, #0
 sbcs.w  r12, r8, r5
 sbcs.w  r2, r8, lr
 sbc.w   r3, r8, r6
 cmp     r1, #0
 itttt   pl
 movpl   r0, r4
 movpl   r12, r5
 movpl   r2, lr
 movpl   r3, r6
 pop.w   {r4, r5, r6, r7, r8, r9, r10, lr}
 mov     r1, r12
 bx      lr
<label>:
 movs    r3, #0
 subs    r0, #1
 movt    r3, #32752
 sbcs.w  r0, r2, r3
 bhs     <label>
 mvn     r0, #-2147483648
 eor.w   r3, r0, r1, asr, #31
 mvn.w   r0, r1, asr, #31
 mov     r2, r0
 mov     r1, r0
 bx      lr
<label>:
 movs    r0, #0
 movs    r1, #0
 movs    r2, #0
 movs    r3, #0
 bx      lr
