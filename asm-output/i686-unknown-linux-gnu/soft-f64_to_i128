floatconv::soft::f64_to_i128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 8
 mov     ebp, dword, ptr, [esp, +, 36]
 mov     eax, dword, ptr, [esp, +, 28]
 mov     edx, ebp
 and     edx, 2147483647
 mov     ecx, edx
 shr     ecx, 20
 cmp     ecx, 1023
 jb      <label>
 mov     ebx, dword, ptr, [esp, +, 32]
 mov     ecx, edx
 shr     ecx, 21
 cmp     ecx, 575
 jae     <label>
 mov     eax, ebp
 shld    ebp, ebx, 11
 mov     dl, 126
 shl     ebx, 11
 xor     edi, edi
 shr     eax, 20
 or      ebp, -2147483648
 sub     dl, al
 mov     eax, ebx
 mov     esi, ebp
 mov     ecx, edx
 shrd    eax, ebp, cl
 shr     esi, cl
 test    dl, 32
 cmovne  eax, esi
 cmovne  esi, edi
 and     dl, 127
 mov     ch, dl
 mov     cl, dl
 mov     dword, ptr, [esp], eax
 mov     eax, ebp
 sub     ch, 64
 cmovae  esi, edi
 add     cl, -64
 mov     dword, ptr, [esp, +, 4], esi
 mov     esi, ebx
 shr     eax, cl
 shrd    esi, ebp, cl
 test    cl, 32
 cmovne  esi, eax
 cmovne  eax, edi
 neg     ch
 mov     cl, ch
 shld    ebp, ebx, cl
 shl     ebx, cl
 test    ch, 32
 cmovne  ebp, ebx
 cmovne  ebx, edi
 cmp     dl, 64
 cmovae  ebp, eax
 mov     eax, dword, ptr, [esp]
 cmovae  ebx, esi
 mov     esi, 0
 cmovae  eax, edi
 test    dl, dl
 mov     edx, 0
 cmove   ebx, edi
 cmove   ebp, edi
 mov     dword, ptr, [esp], eax
 mov     ecx, ebx
 neg     ecx
 sbb     edx, ebp
 sbb     esi, eax
 mov     eax, dword, ptr, [esp, +, 28]
 sbb     edi, dword, ptr, [esp, +, 4]
 cmp     dword, ptr, [esp, +, 36], 0
 cmovns  esi, dword, ptr, [esp]
 cmovns  edi, dword, ptr, [esp, +, 4]
 cmovns  ecx, ebx
 cmovns  edx, ebp
 jmp     <label>
<label>:
 cmp     ebx, 1
 sbb     edx, 2146435072
 jae     <label>
 shr     ebp, 31
 xor     edi, edi
 mov     edx, 0
 mov     esi, 0
 add     ebp, -1
 adc     edx, -1
 mov     ecx, ebp
 adc     esi, -1
 adc     edi, 2147483647
 jmp     <label>
<label>:
 xor     ecx, ecx
 xor     edx, edx
 xor     esi, esi
 xor     edi, edi
<label>:
 mov     dword, ptr, [eax], ecx
 mov     dword, ptr, [eax, +, 4], edx
 mov     dword, ptr, [eax, +, 8], esi
 mov     dword, ptr, [eax, +, 12], edi
 add     esp, 8
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
