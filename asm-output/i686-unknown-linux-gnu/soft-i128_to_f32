floatconv::soft::i128_to_f32:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 36
 mov     ecx, dword, ptr, [esp, +, 56]
 mov     edx, dword, ptr, [esp, +, 60]
 mov     ebp, 0
 mov     edi, 0
 mov     eax, dword, ptr, [esp, +, 68]
 mov     ebx, 0
 mov     esi, ecx
 neg     esi
 sbb     ebp, edx
 sbb     edi, dword, ptr, [esp, +, 64]
 sbb     ebx, eax
 test    eax, eax
 cmovns  edi, dword, ptr, [esp, +, 64]
 cmovns  ebp, edx
 cmovns  esi, ecx
 cmovns  ebx, eax
 mov     edx, 63
 bsr     eax, ebx
 mov     dword, ptr, [esp, +, 8], ebx
 mov     dword, ptr, [esp, +, 16], esi
 mov     dword, ptr, [esp, +, 20], ebp
 xor     eax, 31
 bsr     ecx, edi
 mov     dword, ptr, [esp, +, 24], edi
 xor     ecx, 31
 add     ecx, 32
 test    ebx, ebx
 cmovne  ecx, eax
 bsr     eax, esi
 cmovne  edx, eax
 bsr     ebx, ebp
 mov     eax, edi
 xor     edx, 31
 xor     ebx, 31
 add     edx, 32
 test    ebp, ebp
 cmove   ebx, edx
 add     ebx, 64
 or      eax, dword, ptr, [esp, +, 8]
 mov     eax, ebp
 cmovne  ebx, ecx
 mov     ecx, ebx
 shl     edi, cl
 shld    eax, esi, cl
 mov     edx, edi
 mov     dword, ptr, [esp, +, 4], edi
 mov     edi, esi
 shl     edi, cl
 test    bl, 32
 mov     ecx, 0
 cmovne  eax, edi
 cmovne  edi, ecx
 mov     dword, ptr, [esp, +, 12], eax
 mov     eax, edx
 mov     dh, bl
 cmovne  eax, ecx
 and     dh, 127
 mov     dl, dh
 mov     byte, ptr, [esp, +, 3], dh
 sub     dl, 64
 cmovae  edi, ecx
 neg     dl
 mov     ch, dh
 mov     dword, ptr, [esp, +, 32], edi
 mov     cl, dl
 mov     edi, ebp
 shrd    esi, ebp, cl
 shr     edi, cl
 test    dl, 32
 mov     ebp, 0
 cmovne  esi, edi
 add     ch, -64
 or      esi, eax
 mov     eax, dword, ptr, [esp, +, 16]
 mov     cl, ch
 shl     eax, cl
 test    ch, 32
 mov     cl, bl
 mov     dword, ptr, [esp, +, 28], eax
 cmovne  eax, ebp
 cmp     dh, 64
 mov     ebp, 0
 cmovb   eax, esi
 mov     esi, dword, ptr, [esp, +, 12]
 cmovae  esi, ebp
 test    dl, 32
 mov     edx, dword, ptr, [esp, +, 24]
 mov     dword, ptr, [esp, +, 12], esi
 mov     esi, dword, ptr, [esp, +, 8]
 cmovne  edi, ebp
 mov     ebp, dword, ptr, [esp, +, 16]
 shld    esi, edx, cl
 test    bl, 32
 mov     edx, dword, ptr, [esp, +, 20]
 mov     cl, ch
 cmovne  esi, dword, ptr, [esp, +, 4]
 shld    edx, ebp, cl
 test    ch, 32
 mov     ecx, dword, ptr, [esp, +, 68]
 mov     ebp, dword, ptr, [esp, +, 24]
 cmovne  edx, dword, ptr, [esp, +, 28]
 or      esi, edi
 cmp     byte, ptr, [esp, +, 3], 64
 mov     dword, ptr, [esp, +, 4], ecx
 cmovae  esi, edx
 and     dword, ptr, [esp, +, 4], -2147483648
 cmp     byte, ptr, [esp, +, 3], 0
 cmove   esi, dword, ptr, [esp, +, 8]
 cmove   eax, ebp
 xor     ecx, ecx
 mov     edi, esi
 mov     edx, esi
 shld    edi, eax, 24
 or      eax, dword, ptr, [esp, +, 32]
 shr     edx, 8
 or      eax, dword, ptr, [esp, +, 12]
 mov     eax, edx
 not     eax
 setne   cl
 shr     esi, 7
 or      ebp, dword, ptr, [esp, +, 16]
 shl     ebx, 23
 and     eax, esi
 mov     esi, dword, ptr, [esp, +, 8]
 or      ecx, edi
 and     eax, 1
 sub     ecx, eax
 mov     eax, 2122317824
 sub     eax, ebx
 shr     ecx, 31
 or      esi, dword, ptr, [esp, +, 20]
 or      esi, ebp
 mov     esi, 0
 cmove   eax, esi
 add     eax, edx
 add     eax, ecx
 or      eax, dword, ptr, [esp, +, 4]
 add     esp, 36
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
