floatconv::soft::i128_to_f32:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 32
 mov     edx, dword, ptr, [esp, +, 64]
 mov     ebx, dword, ptr, [esp, +, 52]
 mov     edi, dword, ptr, [esp, +, 56]
 mov     esi, dword, ptr, [esp, +, 60]
 mov     eax, edx
 sar     eax, 31
 add     ebx, eax
 adc     edi, eax
 adc     esi, eax
 adc     edx, eax
 xor     esi, eax
 xor     ebx, eax
 xor     edi, eax
 xor     edx, eax
 bsr     ebp, esi
 mov     dword, ptr, [esp, +, 20], esi
 mov     dword, ptr, [esp, +, 16], ebx
 bsr     eax, edx
 xor     ebp, 31
 mov     dword, ptr, [esp, +, 8], edx
 xor     eax, 31
 add     ebp, 32
 test    edx, edx
 mov     edx, 63
 cmovne  ebp, eax
 bsr     eax, ebx
 cmovne  edx, eax
 bsr     ecx, edi
 mov     eax, esi
 xor     edx, 31
 xor     ecx, 31
 add     edx, 32
 test    edi, edi
 cmove   ecx, edx
 add     ecx, 64
 or      eax, dword, ptr, [esp, +, 8]
 mov     eax, edi
 cmovne  ecx, ebp
 mov     ebp, ebx
 shl     esi, cl
 shld    eax, ebx, cl
 mov     dword, ptr, [esp, +, 4], ecx
 mov     edx, esi
 mov     dword, ptr, [esp, +, 24], esi
 mov     esi, ebx
 shl     esi, cl
 test    cl, 32
 mov     ebx, edx
 cmovne  eax, esi
 mov     dword, ptr, [esp, +, 12], eax
 mov     eax, 0
 cmovne  ebx, eax
 cmovne  esi, eax
 and     cl, 127
 mov     edx, ecx
 mov     dh, cl
 mov     byte, ptr, [esp, +, 3], cl
 sub     dl, 64
 cmovae  esi, eax
 neg     dl
 mov     eax, ebp
 mov     ebp, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [esp, +, 28], esi
 mov     ecx, edx
 mov     esi, edi
 shrd    eax, edi, cl
 shr     esi, cl
 test    dl, 32
 mov     cl, dh
 cmovne  eax, esi
 add     cl, -64
 shl     ebp, cl
 or      eax, ebx
 mov     byte, ptr, [esp, +, 2], cl
 test    cl, 32
 mov     ecx, 0
 mov     ebx, ebp
 cmovne  ebx, ecx
 cmp     dh, 64
 cmovb   ebx, eax
 mov     eax, dword, ptr, [esp, +, 12]
 cmovae  eax, ecx
 test    dl, 32
 mov     edx, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [esp, +, 12], eax
 mov     eax, dword, ptr, [esp, +, 20]
 cmovne  esi, ecx
 mov     ecx, dword, ptr, [esp, +, 4]
 shld    edx, eax, cl
 test    byte, ptr, [esp, +, 4], 32
 mov     cl, byte, ptr, [esp, +, 2]
 mov     eax, dword, ptr, [esp, +, 16]
 cmovne  edx, dword, ptr, [esp, +, 24]
 shld    edi, eax, cl
 mov     al, byte, ptr, [esp, +, 3]
 test    cl, 32
 mov     ecx, 2122317824
 cmovne  edi, ebp
 mov     ebp, dword, ptr, [esp, +, 56]
 or      edx, esi
 cmp     al, 64
 cmovae  edx, edi
 mov     edi, dword, ptr, [esp, +, 64]
 or      ebp, edi
 and     edi, -2147483648
 test    al, al
 mov     eax, dword, ptr, [esp, +, 52]
 cmove   edx, dword, ptr, [esp, +, 8]
 cmove   ebx, dword, ptr, [esp, +, 20]
 shl     dword, ptr, [esp, +, 4], 23
 sub     ecx, dword, ptr, [esp, +, 4]
 or      eax, dword, ptr, [esp, +, 60]
 mov     esi, edx
 shld    edx, ebx, 24
 shr     esi, 8
 or      eax, ebp
 mov     eax, 0
 cmove   ecx, eax
 or      ebx, dword, ptr, [esp, +, 28]
 xor     eax, eax
 or      ebx, dword, ptr, [esp, +, 12]
 setne   al
 add     ecx, esi
 not     esi
 or      eax, edx
 shr     edx, 31
 and     esi, edx
 sub     eax, esi
 shr     eax, 31
 add     eax, ecx
 or      eax, edi
 add     esp, 32
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
