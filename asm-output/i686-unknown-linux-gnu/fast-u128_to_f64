floatconv::fast::u128_to_f64:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     ecx, dword, ptr, [esp, +, 44]
 mov     edx, dword, ptr, [esp, +, 40]
 mov     edi, dword, ptr, [esp, +, 36]
 mov     esi, dword, ptr, [esp, +, 32]
 call    <label>$pb
<label>$pb:
 pop     eax
 mov     ebx, 1048575
 mov     ebp, -1
 add     eax, offset, _GLOBAL_OFFSET_TABLE_+(<label>-<label>$pb)
 cmp     ecx, 256
 jae     <label>
 and     ebx, edi
 and     esi, ebp
 shld    ecx, edx, 12
 shld    edx, edi, 12
 movd    xmm1, esi
 movd    xmm0, ebx
 movd    xmm2, ecx
 punpckldq xmm1, xmm0
 movd    xmm0, edx
 punpckldq xmm0, xmm2
 punpcklqdq xmm0, xmm1
 por     xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 addpd   xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 jmp     <label>
<label>:
 mov     ebp, ecx
 shr     ecx, 12
 shld    ebp, edx, 20
 shld    edx, edi, 8
 shld    edi, esi, 8
 and     esi, 16777215
 movd    xmm3, ecx
 and     edx, ebx
 mov     ebx, -1
 movd    xmm2, ebp
 and     edi, ebx
 movd    xmm1, edx
 punpckldq xmm2, xmm3
 or      esi, edi
 movd    xmm0, esi
 punpckldq xmm0, xmm1
 punpcklqdq xmm0, xmm2
 por     xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 addpd   xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
<label>:
 movapd  xmm1, xmm0
 unpckhpd xmm1, xmm0
 addsd   xmm1, xmm0
 movsd   qword, ptr, [esp], xmm1
 fld     qword, ptr, [esp]
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
