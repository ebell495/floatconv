floatconv::soft::i128_to_f64:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 36
 mov     esi, dword, ptr, [esp, +, 68]
 mov     ecx, dword, ptr, [esp, +, 56]
 mov     edi, dword, ptr, [esp, +, 60]
 mov     ebp, dword, ptr, [esp, +, 64]
 mov     eax, esi
 mov     dword, ptr, [esp, +, 20], edi
 mov     ebx, esi
 sar     eax, 31
 add     ecx, eax
 adc     edi, eax
 adc     ebp, eax
 adc     ebx, eax
 xor     ebp, eax
 xor     ecx, eax
 xor     edi, eax
 xor     ebx, eax
 bsr     eax, ebp
 mov     esi, ecx
 mov     dword, ptr, [esp, +, 4], ecx
 mov     dword, ptr, [esp, +, 12], ebp
 bsr     ecx, ebx
 xor     eax, 31
 mov     dword, ptr, [esp, +, 16], ebx
 xor     ecx, 31
 add     eax, 32
 test    ebx, ebx
 cmovne  eax, ecx
 bsr     ecx, esi
 mov     esi, 63
 cmovne  esi, ecx
 bsr     edx, edi
 mov     ecx, ebp
 xor     esi, 31
 xor     edx, 31
 add     esi, 32
 test    edi, edi
 cmove   edx, esi
 add     edx, 64
 or      ecx, ebx
 mov     ebx, edi
 cmovne  edx, eax
 mov     eax, dword, ptr, [esp, +, 4]
 mov     ecx, edx
 mov     ch, dl
 shl     ebp, cl
 mov     cl, dl
 mov     dword, ptr, [esp, +, 28], ebp
 mov     esi, eax
 shld    ebx, eax, cl
 mov     eax, ebp
 mov     ebp, dword, ptr, [esp, +, 4]
 shl     esi, cl
 test    dl, 32
 cmovne  ebx, esi
 mov     dword, ptr, [esp, +, 8], ebx
 mov     ebx, 0
 cmovne  eax, ebx
 cmovne  esi, ebx
 and     ch, 127
 mov     byte, ptr, [esp, +, 2], ch
 sub     ch, 64
 cmovae  esi, ebx
 neg     ch
 mov     ebx, ebp
 mov     dword, ptr, [esp, +, 32], esi
 mov     cl, ch
 mov     esi, edi
 shrd    ebx, edi, cl
 shr     esi, cl
 mov     cl, byte, ptr, [esp, +, 2]
 test    ch, 32
 cmovne  ebx, esi
 or      ebx, eax
 mov     eax, ebp
 mov     ebp, 0
 add     cl, -64
 shl     eax, cl
 test    cl, 32
 mov     byte, ptr, [esp, +, 3], cl
 mov     cl, dl
 mov     dword, ptr, [esp, +, 24], eax
 cmovne  eax, ebp
 cmp     byte, ptr, [esp, +, 2], 64
 mov     ebp, dword, ptr, [esp, +, 8]
 cmovb   eax, ebx
 mov     ebx, 0
 cmovae  ebp, ebx
 test    ch, 32
 mov     dword, ptr, [esp, +, 8], ebp
 cmovne  esi, ebx
 mov     ebx, dword, ptr, [esp, +, 16]
 mov     ebp, dword, ptr, [esp, +, 12]
 shld    ebx, ebp, cl
 test    dl, 32
 mov     cl, byte, ptr, [esp, +, 3]
 mov     ebp, dword, ptr, [esp, +, 4]
 cmovne  ebx, dword, ptr, [esp, +, 28]
 shld    edi, ebp, cl
 test    cl, 32
 mov     ecx, dword, ptr, [esp, +, 68]
 mov     ebp, dword, ptr, [esp, +, 8]
 cmovne  edi, dword, ptr, [esp, +, 24]
 or      ebx, esi
 cmp     byte, ptr, [esp, +, 2], 64
 cmovae  ebx, edi
 or      dword, ptr, [esp, +, 20], ecx
 and     ecx, -2147483648
 cmp     byte, ptr, [esp, +, 2], 0
 mov     edi, dword, ptr, [esp, +, 56]
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ecx, dword, ptr, [esp, +, 32]
 cmove   ebx, dword, ptr, [esp, +, 16]
 cmove   eax, dword, ptr, [esp, +, 12]
 or      edi, dword, ptr, [esp, +, 64]
 shl     edx, 20
 mov     esi, ebx
 shld    ebx, eax, 21
 shld    eax, ebp, 21
 shld    ebp, ecx, 21
 or      ebp, ecx
 mov     ecx, 1204813824
 shr     esi, 11
 sub     ecx, edx
 or      edi, dword, ptr, [esp, +, 20]
 mov     edx, 0
 mov     edi, ebx
 not     edi
 cmove   ecx, edx
 mov     edx, eax
 shr     edx, 31
 and     edi, edx
 cmp     ebp, edi
 sbb     eax, 0
 shr     eax, 31
 add     eax, ebx
 adc     ecx, esi
 or      ecx, dword, ptr, [esp, +, 4]
 mov     edx, ecx
 add     esp, 36
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
