floatconv::soft::f64_to_u128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     esi, dword, ptr, [esp, +, 40]
 mov     eax, dword, ptr, [esp, +, 32]
 mov     ecx, esi
 shr     ecx, 20
 cmp     ecx, 1023
 jae     <label>
 xor     edi, edi
 xor     esi, esi
 xor     ebx, ebx
 xor     ebp, ebp
 jmp     <label>
<label>:
 mov     edi, dword, ptr, [esp, +, 36]
 cmp     ecx, 1151
 jae     <label>
 shld    esi, edi, 11
 mov     dl, 126
 shl     edi, 11
 xor     eax, eax
 or      esi, -2147483648
 sub     dl, cl
 mov     ebx, edi
 mov     ecx, edx
 mov     ebp, esi
 mov     dword, ptr, [esp], esi
 shrd    ebx, esi, cl
 shr     ebp, cl
 test    dl, 32
 cmovne  ebx, ebp
 cmovne  ebp, eax
 and     dl, 127
 mov     ch, dl
 mov     cl, dl
 mov     dword, ptr, [esp, +, 4], ebx
 mov     ebx, 0
 sub     ch, 64
 cmovae  ebp, eax
 add     cl, -64
 mov     eax, edi
 shrd    eax, esi, cl
 shr     dword, ptr, [esp], cl
 test    cl, 32
 cmovne  eax, dword, ptr, [esp]
 mov     dword, ptr, [esp, +, 8], eax
 mov     eax, dword, ptr, [esp]
 cmovne  eax, ebx
 neg     ch
 mov     ebx, dword, ptr, [esp, +, 4]
 mov     cl, ch
 mov     dword, ptr, [esp], eax
 mov     eax, dword, ptr, [esp, +, 32]
 shld    esi, edi, cl
 shl     edi, cl
 test    ch, 32
 mov     ecx, 0
 cmovne  esi, edi
 cmovne  edi, ecx
 cmp     dl, 64
 cmovae  edi, dword, ptr, [esp, +, 8]
 cmovae  esi, dword, ptr, [esp]
 cmovae  ebx, ecx
 test    dl, dl
 mov     edx, 0
 cmove   esi, ecx
 cmove   edi, edx
 jmp     <label>
<label>:
 cmp     edi, 1
 sbb     esi, 2146435072
 sbb     edi, edi
 mov     esi, edi
 mov     ebx, edi
 mov     ebp, edi
<label>:
 mov     dword, ptr, [eax], edi
 mov     dword, ptr, [eax, +, 4], esi
 mov     dword, ptr, [eax, +, 8], ebx
 mov     dword, ptr, [eax, +, 12], ebp
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
