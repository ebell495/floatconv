floatconv::soft::f64_to_u128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 12
 mov     esi, dword, ptr, [esp, +, 36]
 mov     edi, dword, ptr, [esp, +, 40]
 mov     eax, dword, ptr, [esp, +, 32]
 mov     ecx, esi
 neg     ecx
 mov     ecx, 2146435072
 sbb     ecx, edi
 jb      <label>
 mov     edx, edi
 shr     edx, 20
 cmp     edx, 1151
 jb      <label>
 mov     esi, -1
 mov     edi, -1
 mov     ebx, -1
 mov     ebp, -1
 jmp     <label>
<label>:
 cmp     edx, 1023
 jb      <label>
 shld    edi, esi, 11
 shl     esi, 11
 mov     cl, 126
 or      edi, -2147483648
 sub     cl, dl
 mov     ebx, esi
 xor     edx, edx
 mov     dword, ptr, [esp, +, 8], esi
 mov     ebp, edi
 shrd    ebx, edi, cl
 shr     ebp, cl
 test    cl, 32
 cmovne  ebx, ebp
 cmovne  ebp, edx
 and     cl, 127
 mov     ch, cl
 mov     byte, ptr, [esp, +, 3], cl
 sub     ch, 64
 cmovae  ebp, edx
 add     cl, -64
 mov     edx, edi
 mov     byte, ptr, [esp, +, 2], ch
 shrd    dword, ptr, [esp, +, 8], edi, cl
 shr     edx, cl
 test    cl, 32
 mov     ecx, 0
 mov     dword, ptr, [esp, +, 4], edx
 mov     edx, dword, ptr, [esp, +, 8]
 cmovne  edx, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [esp, +, 8], edx
 mov     edx, dword, ptr, [esp, +, 4]
 cmovne  edx, ecx
 mov     cl, byte, ptr, [esp, +, 2]
 mov     dword, ptr, [esp, +, 4], edx
 neg     cl
 mov     edx, ecx
 mov     dl, byte, ptr, [esp, +, 3]
 shld    edi, esi, cl
 shl     esi, cl
 test    cl, 32
 mov     ecx, 0
 cmovne  edi, esi
 cmovne  esi, ecx
 cmp     dl, 64
 cmovae  esi, dword, ptr, [esp, +, 8]
 cmovae  edi, dword, ptr, [esp, +, 4]
 cmovae  ebx, ecx
 test    dl, dl
 mov     edx, 0
 cmove   edi, ecx
 cmove   esi, edx
 jmp     <label>
<label>:
 xor     esi, esi
 xor     edi, edi
 xor     ebx, ebx
 xor     ebp, ebp
<label>:
 mov     dword, ptr, [eax], esi
 mov     dword, ptr, [eax, +, 4], edi
 mov     dword, ptr, [eax, +, 8], ebx
 mov     dword, ptr, [eax, +, 12], ebp
 add     esp, 12
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
