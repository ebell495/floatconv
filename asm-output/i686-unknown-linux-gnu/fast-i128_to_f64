floatconv::fast::i128_to_f64:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 20
 mov     esi, dword, ptr, [esp, +, 52]
 mov     edx, dword, ptr, [esp, +, 40]
 mov     ebx, dword, ptr, [esp, +, 44]
 mov     edi, dword, ptr, [esp, +, 48]
 call    <label>$pb
<label>$pb:
 pop     eax
 add     eax, offset, _GLOBAL_OFFSET_TABLE_+(<label>-<label>$pb)
 mov     dword, ptr, [esp, +, 4], eax
 mov     ebp, esi
 mov     eax, esi
 sar     ebp, 31
 add     edx, ebp
 adc     ebx, ebp
 adc     edi, ebp
 adc     eax, ebp
 xor     edx, ebp
 xor     ebx, ebp
 xor     edi, ebp
 xor     eax, ebp
 mov     ebp, 1048575
 cmp     eax, 256
 jae     <label>
 mov     ecx, -1
 shld    eax, edi, 12
 and     ebp, ebx
 shld    edi, ebx, 12
 and     edx, ecx
 movd    xmm2, eax
 movd    xmm0, ebp
 mov     eax, dword, ptr, [esp, +, 4]
 movd    xmm1, edx
 punpckldq xmm1, xmm0
 movd    xmm0, edi
 punpckldq xmm0, xmm2
 punpcklqdq xmm0, xmm1
 por     xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 addpd   xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 jmp     <label>
<label>:
 mov     esi, eax
 mov     ecx, -1
 shr     eax, 12
 shld    esi, edi, 20
 shld    edi, ebx, 8
 shld    ebx, edx, 8
 and     edx, 16777215
 movd    xmm3, eax
 mov     eax, dword, ptr, [esp, +, 4]
 and     ebx, ecx
 and     edi, ebp
 movd    xmm2, esi
 mov     esi, dword, ptr, [esp, +, 52]
 or      edx, ebx
 movd    xmm1, edi
 punpckldq xmm2, xmm3
 movd    xmm0, edx
 punpckldq xmm0, xmm1
 punpcklqdq xmm0, xmm2
 por     xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
 addpd   xmm0, xmmword, ptr, [eax, +, <label>@GOTOFF]
<label>:
 movapd  xmm1, xmm0
 and     esi, -2147483648
 unpckhpd xmm1, xmm0
 addpd   xmm1, xmm0
 movapd  xmm0, xmm1
 shufps  xmm0, xmm1, 85
 movd    ecx, xmm0
 or      ecx, esi
 movd    xmm0, ecx
 unpcklps xmm1, xmm0
 movlps  qword, ptr, [esp, +, 8], xmm1
 fld     qword, ptr, [esp, +, 8]
 add     esp, 20
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
