floatconv::soft::f32_to_u128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 push    eax
 mov     edx, dword, ptr, [esp, +, 28]
 mov     eax, dword, ptr, [esp, +, 24]
 cmp     edx, 1065353216
 jae     <label>
 xor     ebp, ebp
 xor     esi, esi
 xor     edi, edi
 xor     ebx, ebx
 jmp     <label>
<label>:
 cmp     edx, 2139095040
 jae     <label>
 mov     esi, edx
 shr     edx, 23
 mov     ch, 126
 xor     ebx, ebx
 sub     ch, dl
 shl     esi, 8
 mov     dh, ch
 or      esi, -2147483648
 and     dh, 127
 mov     eax, esi
 mov     dl, dh
 add     dl, -64
 mov     cl, dl
 shr     eax, cl
 test    dl, 32
 mov     cl, ch
 mov     edi, eax
 cmovne  edi, ebx
 mov     ebx, esi
 mov     dword, ptr, [esp], edi
 xor     edi, edi
 shr     ebx, cl
 shrd    edi, esi, cl
 test    ch, 32
 mov     ecx, 0
 cmovne  edi, ebx
 cmovne  ebx, ecx
 cmp     dh, 64
 cmovae  ebx, ecx
 xor     ebp, ebp
 mov     ecx, edx
 shrd    ebp, esi, cl
 test    dl, 32
 mov     cl, dh
 cmovne  ebp, eax
 sub     cl, 64
 mov     eax, 0
 cmovb   ebp, eax
 neg     cl
 shld    esi, eax, cl
 test    cl, 32
 mov     ecx, 0
 mov     eax, dword, ptr, [esp, +, 24]
 cmovne  esi, ecx
 cmp     dh, 64
 cmovae  esi, dword, ptr, [esp]
 cmovae  edi, ecx
 test    dh, dh
 cmove   ebp, ecx
 mov     ecx, 0
 cmove   esi, ecx
 jmp     <label>
<label>:
 sete    cl
 movzx   ebp, cl
 neg     ebp
 mov     esi, ebp
 mov     edi, ebp
 mov     ebx, ebp
<label>:
 mov     dword, ptr, [eax], ebp
 mov     dword, ptr, [eax, +, 4], esi
 mov     dword, ptr, [eax, +, 8], edi
 mov     dword, ptr, [eax, +, 12], ebx
 add     esp, 4
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
