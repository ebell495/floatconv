floatconv::soft::i128_to_f64:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 36
 mov     eax, dword, ptr, [esp, +, 64]
 mov     ebx, dword, ptr, [esp, +, 56]
 mov     ebp, dword, ptr, [esp, +, 60]
 mov     edx, dword, ptr, [esp, +, 68]
 mov     ecx, edx
 sar     ecx, 31
 add     ebx, ecx
 adc     ebp, ecx
 adc     eax, ecx
 mov     edi, edx
 adc     edi, ecx
 xor     ebx, ecx
 mov     dword, ptr, [esp], ebx
 xor     eax, ecx
 xor     edi, ecx
 jne     <label>
 bsr     edx, eax
 xor     edx, 31
 add     edx, 32
 xor     ebp, ecx
 bsr     esi, dword, ptr, [esp]
 mov     ecx, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     edx, edi
 xor     edx, 31
 xor     ebp, ecx
 bsr     esi, dword, ptr, [esp]
 mov     ecx, 63
 je      <label>
<label>:
 mov     ecx, esi
<label>:
 test    ebp, ebp
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     esi, eax
 or      esi, edi
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, ebp
 xor     ecx, 31
 mov     esi, eax
 or      esi, edi
 jne     <label>
<label>:
 add     ecx, 64
 mov     edx, ecx
<label>:
 mov     dword, ptr, [esp, +, 16], eax
 mov     ecx, edx
 shl     eax, cl
 mov     ebx, ebp
 mov     esi, dword, ptr, [esp]
 shld    ebx, esi, cl
 shl     esi, cl
 test    dl, 32
 mov     dword, ptr, [esp, +, 28], edi
 mov     dword, ptr, [esp, +, 24], eax
 jne     <label>
 mov     dword, ptr, [esp, +, 8], ebx
 mov     dword, ptr, [esp, +, 12], eax
 jmp     <label>
<label>:
 mov     dword, ptr, [esp, +, 8], esi
 mov     dword, ptr, [esp, +, 12], 0
 xor     esi, esi
<label>:
 mov     bh, dl
 and     bh, 127
 mov     ch, bh
 sub     ch, 64
 mov     eax, dword, ptr, [esp, +, 16]
 jb      <label>
 xor     esi, esi
<label>:
 mov     dword, ptr, [esp, +, 32], esi
 neg     ch
 mov     esi, dword, ptr, [esp]
 mov     cl, ch
 shrd    esi, ebp, cl
 mov     edi, ebp
 shr     edi, cl
 test    ch, 32
 mov     dword, ptr, [esp, +, 4], edi
 jne     <label>
 mov     dword, ptr, [esp, +, 4], esi
<label>:
 mov     bl, bh
 add     bl, -64
 mov     esi, dword, ptr, [esp]
 mov     cl, bl
 shl     esi, cl
 test    bl, 32
 mov     dword, ptr, [esp, +, 20], 0
 jne     <label>
 mov     dword, ptr, [esp, +, 20], esi
<label>:
 cmp     bh, 64
 jb      <label>
 mov     dword, ptr, [esp, +, 8], 0
 mov     dword, ptr, [esp, +, 4], esi
 test    ch, 32
 mov     ecx, 0
 je      <label>
 jmp     <label>
<label>:
 mov     eax, dword, ptr, [esp, +, 12]
 or      eax, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [esp, +, 20], eax
 mov     eax, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [esp, +, 4], esi
 test    ch, 32
 mov     ecx, 0
 jne     <label>
<label>:
 mov     ecx, edi
<label>:
 mov     dword, ptr, [esp, +, 12], ecx
 mov     esi, dword, ptr, [esp, +, 28]
 mov     ecx, edx
 shld    esi, eax, cl
 test    dl, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 24], esi
<label>:
 mov     ecx, ebx
 mov     esi, dword, ptr, [esp]
 shld    ebp, esi, cl
 test    bl, 32
 mov     edi, dword, ptr, [esp, +, 68]
 jne     <label>
 mov     dword, ptr, [esp, +, 4], ebp
<label>:
 cmp     bh, 64
 mov     esi, dword, ptr, [esp, +, 32]
 mov     eax, dword, ptr, [esp, +, 24]
 jae     <label>
 or      eax, dword, ptr, [esp, +, 12]
 mov     dword, ptr, [esp, +, 4], eax
<label>:
 mov     eax, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [esp], edx
 test    bh, bh
 mov     ebx, dword, ptr, [esp, +, 28]
 je      <label>
 mov     ebx, dword, ptr, [esp, +, 4]
 mov     eax, dword, ptr, [esp, +, 20]
<label>:
 mov     ecx, ebx
 shld    ebx, eax, 21
 mov     edx, dword, ptr, [esp, +, 8]
 shld    eax, edx, 21
 shld    edx, esi, 21
 or      edx, esi
 mov     dword, ptr, [esp, +, 8], edx
 mov     esi, dword, ptr, [esp, +, 56]
 or      esi, dword, ptr, [esp, +, 64]
 shr     ecx, 11
 mov     ebp, dword, ptr, [esp, +, 60]
 or      ebp, edi
 and     edi, -2147483648
 or      esi, ebp
 mov     edx, 0
 je      <label>
 mov     esi, dword, ptr, [esp]
 shl     esi, 20
 mov     edx, 1204813824
 sub     edx, esi
<label>:
 mov     ebp, eax
 shr     ebp, 31
 mov     esi, ebx
 not     esi
 and     esi, ebp
 cmp     dword, ptr, [esp, +, 8], esi
 sbb     eax, 0
 shr     eax, 31
 add     eax, ebx
 adc     edx, ecx
 or      edx, edi
 add     esp, 36
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
