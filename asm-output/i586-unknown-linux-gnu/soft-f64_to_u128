floatconv::soft::f64_to_u128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 push    eax
 mov     eax, dword, ptr, [esp, +, 24]
 mov     esi, dword, ptr, [esp, +, 32]
 mov     ecx, esi
 shr     ecx, 20
 cmp     ecx, 1023
 jae     <label>
 xor     ecx, ecx
 xor     edx, edx
 xor     esi, esi
 xor     ebp, ebp
 jmp     <label>
<label>:
 mov     ebx, dword, ptr, [esp, +, 28]
 cmp     ecx, 1151
 jae     <label>
 shld    esi, ebx, 11
 shl     ebx, 11
 or      esi, -2147483648
 mov     dl, 126
 sub     dl, cl
 mov     edi, ebx
 mov     ecx, edx
 shrd    edi, esi, cl
 mov     ebp, esi
 shr     ebp, cl
 test    dl, 32
 je      <label>
 mov     edi, ebp
 xor     ebp, ebp
<label>:
 mov     dword, ptr, [esp], edi
 and     dl, 127
 mov     ch, dl
 sub     ch, 64
 jb      <label>
 xor     ebp, ebp
<label>:
 mov     cl, dl
 add     cl, -64
 mov     eax, ebx
 shrd    eax, esi, cl
 mov     edi, esi
 shr     edi, cl
 test    cl, 32
 je      <label>
 mov     eax, edi
 xor     edi, edi
<label>:
 neg     ch
 mov     cl, ch
 shld    esi, ebx, cl
 shl     ebx, cl
 test    ch, 32
 jne     <label>
 cmp     dl, 64
 jae     <label>
<label>:
 test    dl, dl
 mov     ecx, 0
 mov     edx, 0
 je      <label>
<label>:
 mov     edx, esi
 mov     ecx, ebx
<label>:
 mov     eax, dword, ptr, [esp, +, 24]
 mov     esi, dword, ptr, [esp]
 jmp     <label>
<label>:
 cmp     ebx, 1
 sbb     esi, 2146435072
 sbb     ecx, ecx
 mov     edx, ecx
 mov     esi, ecx
 mov     ebp, ecx
<label>:
 mov     dword, ptr, [eax], ecx
 mov     dword, ptr, [eax, +, 4], edx
 mov     dword, ptr, [eax, +, 8], esi
 mov     dword, ptr, [eax, +, 12], ebp
 add     esp, 4
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
<label>:
 mov     esi, ebx
 xor     ebx, ebx
 cmp     dl, 64
 jb      <label>
<label>:
 mov     dword, ptr, [esp], 0
 mov     ebx, eax
 mov     esi, edi
 test    dl, dl
 mov     ecx, 0
 mov     edx, 0
 jne     <label>
 jmp     <label>
