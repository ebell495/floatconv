floatconv::soft::i128_to_f32:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 40
 mov     edi, dword, ptr, [esp, +, 68]
 mov     eax, dword, ptr, [esp, +, 60]
 mov     ebx, dword, ptr, [esp, +, 64]
 mov     edx, dword, ptr, [esp, +, 72]
 mov     ecx, edx
 sar     ecx, 31
 add     eax, ecx
 adc     ebx, ecx
 adc     edi, ecx
 adc     edx, ecx
 xor     eax, ecx
 xor     edi, ecx
 xor     edx, ecx
 mov     dword, ptr, [esp, +, 20], edx
 jne     <label>
 bsr     edx, edi
 xor     edx, 31
 add     edx, 32
 jmp     <label>
<label>:
 bsr     edx, edx
 xor     edx, 31
<label>:
 mov     dword, ptr, [esp], edx
 xor     ebx, ecx
 bsr     edx, eax
 mov     ecx, 63
 je      <label>
 mov     ecx, edx
<label>:
 test    ebx, ebx
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, edi
 or      edx, dword, ptr, [esp, +, 20]
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, ebx
 xor     ecx, 31
 mov     edx, edi
 or      edx, dword, ptr, [esp, +, 20]
 jne     <label>
<label>:
 add     ecx, 64
 mov     dword, ptr, [esp], ecx
<label>:
 mov     esi, edi
 mov     ecx, dword, ptr, [esp]
 shl     esi, cl
 mov     edx, ebx
 shld    edx, eax, cl
 mov     ebp, eax
 shl     ebp, cl
 test    cl, 32
 mov     dword, ptr, [esp, +, 16], esi
 jne     <label>
 mov     dword, ptr, [esp, +, 12], edx
 mov     dword, ptr, [esp, +, 4], esi
 jmp     <label>
<label>:
 mov     dword, ptr, [esp, +, 12], ebp
 mov     dword, ptr, [esp, +, 4], 0
 xor     ebp, ebp
<label>:
 mov     dword, ptr, [esp, +, 36], edi
 mov     ecx, dword, ptr, [esp]
 mov     dh, cl
 and     dh, 127
 mov     dl, dh
 sub     dl, 64
 jb      <label>
 xor     ebp, ebp
<label>:
 mov     dword, ptr, [esp, +, 32], ebp
 neg     dl
 mov     dword, ptr, [esp, +, 24], eax
 mov     esi, eax
 mov     ecx, edx
 shrd    esi, ebx, cl
 mov     ebp, ebx
 shr     ebp, cl
 test    dl, 32
 mov     eax, ebp
 mov     edi, dword, ptr, [esp, +, 20]
 jne     <label>
 mov     eax, esi
<label>:
 mov     dword, ptr, [esp, +, 8], eax
 mov     al, dh
 add     al, -64
 mov     esi, dword, ptr, [esp, +, 24]
 mov     ecx, eax
 shl     esi, cl
 test    al, 32
 mov     ecx, 0
 jne     <label>
 mov     ecx, esi
<label>:
 cmp     dh, 64
 jb      <label>
 mov     dword, ptr, [esp, +, 12], 0
 jmp     <label>
<label>:
 mov     ecx, dword, ptr, [esp, +, 4]
 or      ecx, dword, ptr, [esp, +, 8]
<label>:
 mov     dword, ptr, [esp, +, 8], ecx
 mov     dword, ptr, [esp, +, 4], esi
 test    dl, 32
 mov     ecx, 0
 jne     <label>
 mov     ecx, ebp
<label>:
 mov     dword, ptr, [esp, +, 28], ecx
 mov     esi, edi
 mov     ecx, dword, ptr, [esp]
 mov     ebp, dword, ptr, [esp, +, 36]
 shld    esi, ebp, cl
 test    cl, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 16], esi
<label>:
 mov     ecx, eax
 mov     esi, dword, ptr, [esp, +, 24]
 shld    ebx, esi, cl
 test    al, 32
 mov     ecx, dword, ptr, [esp, +, 4]
 je      <label>
 cmp     dh, 64
 mov     eax, dword, ptr, [esp, +, 16]
 jb      <label>
<label>:
 test    dh, dh
 je      <label>
<label>:
 mov     edi, ecx
 mov     ebp, dword, ptr, [esp, +, 8]
<label>:
 mov     ecx, edi
 shr     ecx, 8
 shld    edi, ebp, 24
 mov     edx, dword, ptr, [esp, +, 72]
 mov     ebx, dword, ptr, [esp, +, 64]
 or      ebx, edx
 and     edx, -2147483648
 mov     esi, dword, ptr, [esp, +, 60]
 or      esi, dword, ptr, [esp, +, 68]
 or      esi, ebx
 mov     esi, 0
 je      <label>
 mov     eax, dword, ptr, [esp]
 shl     eax, 23
 mov     esi, 2122317824
 sub     esi, eax
<label>:
 mov     ebx, dword, ptr, [esp, +, 32]
 or      ebx, ebp
 xor     eax, eax
 or      ebx, dword, ptr, [esp, +, 12]
 setne   al
 or      eax, edi
 shr     edi, 31
 add     esi, ecx
 not     ecx
 and     ecx, edi
 sub     eax, ecx
 shr     eax, 31
 add     eax, esi
 or      eax, edx
 add     esp, 40
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     ecx, ebx
 cmp     dh, 64
 mov     eax, dword, ptr, [esp, +, 16]
 jae     <label>
<label>:
 or      eax, dword, ptr, [esp, +, 28]
 mov     ecx, eax
 test    dh, dh
 jne     <label>
 jmp     <label>
