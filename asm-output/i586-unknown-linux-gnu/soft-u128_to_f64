floatconv::soft::u128_to_f64:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 16
 mov     esi, dword, ptr, [esp, +, 44]
 mov     edi, dword, ptr, [esp, +, 48]
 test    edi, edi
 jne     <label>
 bsr     ebx, esi
 xor     ebx, 31
 add     ebx, 32
 mov     ebp, dword, ptr, [esp, +, 40]
 bsr     ecx, dword, ptr, [esp, +, 36]
 mov     eax, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     ebx, edi
 xor     ebx, 31
 mov     ebp, dword, ptr, [esp, +, 40]
 bsr     ecx, dword, ptr, [esp, +, 36]
 mov     eax, 63
 je      <label>
<label>:
 mov     eax, ecx
<label>:
 test    ebp, ebp
 jne     <label>
 xor     eax, 31
 add     eax, 32
 mov     ecx, esi
 or      ecx, edi
 je      <label>
 jmp     <label>
<label>:
 bsr     eax, ebp
 xor     eax, 31
 mov     ecx, esi
 or      ecx, edi
 jne     <label>
<label>:
 add     eax, 64
 mov     ebx, eax
<label>:
 mov     ecx, ebx
 shl     esi, cl
 mov     eax, dword, ptr, [esp, +, 36]
 mov     edx, eax
 shl     edx, cl
 mov     edi, ebp
 shld    edi, eax, cl
 test    bl, 32
 jne     <label>
 mov     dword, ptr, [esp], esi
 jmp     <label>
<label>:
 mov     edi, edx
 mov     dword, ptr, [esp], 0
 xor     edx, edx
<label>:
 mov     dword, ptr, [esp, +, 8], esi
 mov     ah, bl
 and     ah, 127
 mov     ch, ah
 sub     ch, 64
 jb      <label>
 xor     edx, edx
<label>:
 mov     dword, ptr, [esp, +, 12], edx
 neg     ch
 mov     edx, ebp
 mov     cl, ch
 shr     edx, cl
 mov     esi, dword, ptr, [esp, +, 36]
 shrd    esi, ebp, cl
 test    ch, 32
 mov     ebp, edx
 jne     <label>
 mov     ebp, esi
<label>:
 mov     dword, ptr, [esp, +, 4], ebp
 mov     al, ah
 add     al, -64
 mov     esi, dword, ptr, [esp, +, 36]
 mov     cl, al
 shl     esi, cl
 test    al, 32
 mov     ebp, 0
 jne     <label>
 mov     ebp, esi
<label>:
 cmp     ah, 64
 jb      <label>
 xor     edi, edi
 mov     dword, ptr, [esp], ebp
 test    ch, 32
 mov     ecx, 0
 je      <label>
 jmp     <label>
<label>:
 mov     ebp, dword, ptr, [esp]
 or      ebp, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [esp], ebp
 test    ch, 32
 mov     ecx, 0
 jne     <label>
<label>:
 mov     ecx, edx
<label>:
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ebp, dword, ptr, [esp, +, 48]
 mov     ecx, ebx
 mov     edx, dword, ptr, [esp, +, 44]
 shld    ebp, edx, cl
 test    bl, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 8], ebp
<label>:
 mov     ebp, dword, ptr, [esp, +, 40]
 mov     ecx, eax
 mov     edx, dword, ptr, [esp, +, 36]
 shld    ebp, edx, cl
 test    al, 32
 jne     <label>
 mov     esi, ebp
<label>:
 cmp     ah, 64
 jae     <label>
 mov     esi, dword, ptr, [esp, +, 8]
 or      esi, dword, ptr, [esp, +, 4]
<label>:
 mov     ebp, dword, ptr, [esp, +, 44]
 test    ah, ah
 mov     ecx, dword, ptr, [esp, +, 48]
 mov     eax, ebp
 mov     ebp, dword, ptr, [esp]
 je      <label>
 mov     ecx, esi
 mov     eax, ebp
<label>:
 mov     esi, ecx
 shld    ecx, eax, 21
 shld    eax, edi, 21
 mov     ebp, dword, ptr, [esp, +, 12]
 shld    edi, ebp, 21
 or      edi, ebp
 mov     ebp, dword, ptr, [esp, +, 40]
 or      ebp, dword, ptr, [esp, +, 48]
 or      edx, dword, ptr, [esp, +, 44]
 shr     esi, 11
 or      edx, ebp
 mov     edx, 0
 je      <label>
 shl     ebx, 20
 mov     edx, 1204813824
 sub     edx, ebx
<label>:
 mov     ebp, eax
 shr     ebp, 31
 mov     ebx, ecx
 not     ebx
 and     ebx, ebp
 cmp     edi, ebx
 sbb     eax, 0
 shr     eax, 31
 add     eax, ecx
 adc     edx, esi
 add     esp, 16
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
