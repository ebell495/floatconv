floatconv::soft::u128_to_f32:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 20
 mov     ebx, dword, ptr, [esp, +, 40]
 mov     esi, dword, ptr, [esp, +, 48]
 mov     edi, dword, ptr, [esp, +, 52]
 test    edi, edi
 jne     <label>
 bsr     eax, esi
 xor     eax, 31
 add     eax, 32
 mov     ebp, dword, ptr, [esp, +, 44]
 bsr     edx, ebx
 mov     ecx, 63
 jne     <label>
 jmp     <label>
<label>:
 bsr     eax, edi
 xor     eax, 31
 mov     ebp, dword, ptr, [esp, +, 44]
 bsr     edx, ebx
 mov     ecx, 63
 je      <label>
<label>:
 mov     ecx, edx
<label>:
 test    ebp, ebp
 jne     <label>
 xor     ecx, 31
 add     ecx, 32
 mov     edx, esi
 or      edx, edi
 je      <label>
 jmp     <label>
<label>:
 bsr     ecx, ebp
 xor     ecx, 31
 mov     edx, esi
 or      edx, edi
 jne     <label>
<label>:
 add     ecx, 64
 mov     eax, ecx
<label>:
 mov     edi, esi
 mov     ecx, eax
 shl     edi, cl
 mov     esi, ebx
 shl     esi, cl
 mov     edx, ebp
 shld    edx, ebx, cl
 test    al, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 8], edx
 mov     dword, ptr, [esp], edi
 jmp     <label>
<label>:
 mov     dword, ptr, [esp, +, 8], esi
 mov     dword, ptr, [esp], 0
 xor     esi, esi
<label>:
 mov     dword, ptr, [esp, +, 12], edi
 mov     dh, al
 and     dh, 127
 mov     dl, dh
 sub     dl, 64
 jb      <label>
 xor     esi, esi
<label>:
 mov     dword, ptr, [esp, +, 16], esi
 neg     dl
 mov     edi, ebp
 mov     ecx, edx
 shr     edi, cl
 mov     esi, ebx
 shrd    esi, ebp, cl
 test    dl, 32
 mov     ecx, edi
 jne     <label>
 mov     ecx, esi
<label>:
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ch, dh
 add     ch, -64
 mov     esi, ebx
 mov     cl, ch
 shl     esi, cl
 test    ch, 32
 mov     ebp, 0
 jne     <label>
 mov     ebp, esi
<label>:
 cmp     dh, 64
 jb      <label>
 mov     dword, ptr, [esp, +, 8], 0
 mov     dword, ptr, [esp], ebp
 test    dl, 32
 mov     ebp, 0
 je      <label>
 jmp     <label>
<label>:
 mov     ebp, dword, ptr, [esp]
 or      ebp, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [esp], ebp
 test    dl, 32
 mov     ebp, 0
 jne     <label>
<label>:
 mov     ebp, edi
<label>:
 mov     dword, ptr, [esp, +, 4], ebp
 mov     ebp, dword, ptr, [esp, +, 52]
 mov     cl, al
 mov     edi, dword, ptr, [esp, +, 48]
 shld    ebp, edi, cl
 test    al, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 12], ebp
<label>:
 mov     ebp, dword, ptr, [esp, +, 44]
 mov     cl, ch
 shld    ebp, ebx, cl
 test    ch, 32
 je      <label>
 cmp     dh, 64
 mov     edi, dword, ptr, [esp, +, 52]
 jb      <label>
<label>:
 mov     ebp, dword, ptr, [esp, +, 48]
 test    dh, dh
 mov     ecx, edi
 je      <label>
<label>:
 mov     ecx, esi
 mov     ebp, dword, ptr, [esp]
<label>:
 mov     edx, ecx
 shr     edx, 8
 shld    ecx, ebp, 24
 mov     esi, dword, ptr, [esp, +, 44]
 or      esi, edi
 or      ebx, dword, ptr, [esp, +, 48]
 or      ebx, esi
 mov     esi, 0
 je      <label>
 shl     eax, 23
 mov     esi, 2122317824
 sub     esi, eax
<label>:
 mov     edi, dword, ptr, [esp, +, 16]
 or      edi, ebp
 xor     eax, eax
 or      edi, dword, ptr, [esp, +, 8]
 setne   al
 or      eax, ecx
 shr     ecx, 31
 add     esi, edx
 not     edx
 and     edx, ecx
 sub     eax, edx
 shr     eax, 31
 add     eax, esi
 add     esp, 20
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret
<label>:
 mov     esi, ebp
 cmp     dh, 64
 mov     edi, dword, ptr, [esp, +, 52]
 jae     <label>
<label>:
 mov     esi, dword, ptr, [esp, +, 12]
 or      esi, dword, ptr, [esp, +, 4]
 mov     ebp, dword, ptr, [esp, +, 48]
 test    dh, dh
 mov     ecx, edi
 jne     <label>
 jmp     <label>
