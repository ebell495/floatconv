floatconv::soft::f64_to_i128:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 8
 mov     eax, dword, ptr, [esp, +, 28]
 mov     esi, dword, ptr, [esp, +, 36]
 mov     ebp, dword, ptr, [esp, +, 32]
 mov     ecx, esi
 and     ecx, 2147483647
 mov     edx, ebp
 neg     edx
 mov     edx, 2146435072
 sbb     edx, ecx
 jb      <label>
 mov     edx, ecx
 shr     edx, 21
 cmp     edx, 574
 jbe     <label>
 xor     ecx, ecx
 test    esi, esi
 setns   cl
 xor     esi, esi
 neg     ecx
 mov     edx, 0
 sbb     edx, edx
 sbb     esi, esi
 mov     ebx, -2147483648
 sbb     ebx, 0
 jmp     <label>
<label>:
 shr     ecx, 20
 cmp     ecx, 1022
 jbe     <label>
 mov     eax, esi
 shld    eax, ebp, 10
 shl     ebp, 10
 and     eax, 1073741823
 or      eax, 1073741824
 mov     edx, esi
 shr     edx, 20
 mov     cl, 125
 sub     cl, dl
 mov     esi, ebp
 shrd    esi, eax, cl
 mov     ebx, eax
 shr     ebx, cl
 test    cl, 32
 je      <label>
 mov     esi, ebx
 xor     ebx, ebx
<label>:
 and     cl, 127
 mov     ch, cl
 sub     ch, 64
 jb      <label>
 xor     ebx, ebx
<label>:
 mov     byte, ptr, [esp], cl
 add     cl, -64
 mov     edx, ebp
 shrd    edx, eax, cl
 mov     edi, eax
 shr     edi, cl
 test    cl, 32
 jne     <label>
 mov     dword, ptr, [esp, +, 4], edi
 jmp     <label>
<label>:
 xor     ecx, ecx
 xor     edx, edx
 xor     esi, esi
 xor     ebx, ebx
<label>:
 mov     dword, ptr, [eax], ecx
 mov     dword, ptr, [eax, +, 4], edx
 mov     dword, ptr, [eax, +, 8], esi
 mov     dword, ptr, [eax, +, 12], ebx
 add     esp, 8
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
<label>:
 mov     edx, edi
 mov     dword, ptr, [esp, +, 4], 0
<label>:
 neg     ch
 mov     cl, ch
 shld    eax, ebp, cl
 shl     ebp, cl
 test    ch, 32
 mov     cl, byte, ptr, [esp]
 jne     <label>
 cmp     cl, 64
 jae     <label>
<label>:
 test    cl, cl
 mov     edx, 0
 mov     ecx, 0
 je      <label>
<label>:
 mov     edx, eax
 mov     ecx, ebp
<label>:
 mov     eax, ecx
 neg     eax
 mov     edi, 0
 sbb     edi, edx
 mov     dword, ptr, [esp], edi
 mov     edi, 0
 sbb     edi, esi
 mov     ebp, 0
 sbb     ebp, ebx
 cmp     dword, ptr, [esp, +, 36], 0
 jns     <label>
 mov     ecx, eax
 mov     edx, dword, ptr, [esp]
 mov     esi, edi
 mov     ebx, ebp
<label>:
 mov     eax, dword, ptr, [esp, +, 28]
 jmp     <label>
<label>:
 mov     eax, ebp
 xor     ebp, ebp
 cmp     cl, 64
 jb      <label>
<label>:
 xor     esi, esi
 mov     ebp, edx
 mov     eax, dword, ptr, [esp, +, 4]
 test    cl, cl
 mov     edx, 0
 mov     ecx, 0
 jne     <label>
 jmp     <label>
