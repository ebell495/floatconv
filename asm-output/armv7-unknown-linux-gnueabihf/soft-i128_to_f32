floatconv::soft::i128_to_f32:
 push    {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, sp, #4
 rsbs    r12, r0, #0
 str     r3, [sp]
 rscs    lr, r1, #0
 rscs    r4, r2, #0
 rsc     r5, r3, #0
 cmp     r3, #0
 movpl   r4, r2
 clz     r2, r4
 movpl   r5, r3
 add     r11, r2, #32
 cmp     r5, #0
 clzne   r11, r5
 cmp     r3, #0
 movpl   r12, r0
 clz     r0, r12
 movpl   lr, r1
 add     r0, r0, #32
 cmp     lr, #0
 clzne   r0, lr
 orrs    r1, r4, r5
 addeq   r11, r0, #64
 and     r0, r11, #127
 rsb     r10, r0, #64
 rsbs    r7, r0, #32
 rsb     r2, r10, #32
 sub     r9, r0, #64
 lsr     r1, r12, r10
 orr     r3, r1, lr, lsl, r2
 lsl     r2, r4, r0
 lsrpl   r3, lr, r7
 subs    r6, r0, #32
 movwpl  r2, #0
 lsl     r1, r12, r9
 subs    r8, r0, #96
 movwpl  r1, #0
 cmp     r0, #64
 orrlo   r1, r2, r3
 cmp     r0, #0
 moveq   r1, r4
 lsl     r3, r12, r0
 cmp     r6, #0
 mov     r2, r1
 movwpl  r3, #0
 cmp     r0, #64
 orrlo   r2, r2, r3
 lsr     r3, r12, r7
 orr     r3, r3, lr, lsl, r0
 cmp     r6, #0
 lslpl   r3, r12, r6
 cmp     r0, #64
 orrlo   r2, r2, r3
 lsr     r3, r4, r7
 orr     r3, r3, r5, lsl, r0
 cmp     r6, #0
 lslpl   r3, r4, r6
 cmp     r7, #0
 rsb     r7, r0, #96
 lsr     r6, lr, r10
 movwpl  r6, #0
 cmp     r8, #0
 lsr     r7, r12, r7
 orr     r7, r7, lr, lsl, r9
 lslpl   r7, r12, r8
 cmp     r0, #64
 orrlo   r7, r3, r6
 cmp     r0, #0
 moveq   r7, r5
 lsr     r0, r1, #8
 lsr     r1, r7, #7
 cmp     r2, #0
 orr     r0, r0, r7, lsl, #24
 bic     r1, r1, r7, lsr, #8
 orrne   r0, r0, #1
 and     r1, r1, #1
 sub     r0, r0, r1
 lsr     r1, r7, #8
 sub     r1, r1, r11, lsl, #23
 orr     r2, r12, r4
 add     r1, r1, #1048576000
 orr     r3, lr, r5
 add     r1, r1, #1073741824
 orrs    r2, r2, r3
 lsreq   r1, r7, #8
 add     r0, r1, r0, lsr, #31
 ldr     r1, [sp]
 and     r1, r1, #-2147483648
 orr     r0, r0, r1
 add     sp, sp, #4
 pop     {r4, r5, r6, r7, r8, r9, r10, r11, pc}
