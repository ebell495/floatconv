floatconv::soft::i128_to_f64:
 push    {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, sp, #16
 adds    r7, r0, r3, asr, #31
 str     r0, [sp, #12]
 adcs    r4, r1, r3, asr, #31
 eor     lr, r7, r3, asr, #31
 adcs    r6, r2, r3, asr, #31
 eor     r4, r4, r3, asr, #31
 eor     r10, r6, r3, asr, #31
 stmib   sp, {r1, r2}
 clz     r6, r10
 add     r0, r6, #32
 adc     r6, r3, r3, asr, #31
 eor     r5, r6, r3, asr, #31
 clz     r6, lr
 cmp     r5, #0
 add     r6, r6, #32
 clzne   r0, r5
 cmp     r4, #0
 clzne   r6, r4
 orrs    r7, r10, r5
 addeq   r0, r6, #64
 str     r0, [sp]
 and     r6, r0, #127
 rsb     r9, r6, #32
 rsb     r12, r6, #64
 subs    r8, r6, #32
 sub     r0, r6, #64
 lsr     r7, r10, r9
 orr     r11, r7, r5, lsl, r6
 rsb     r7, r6, #96
 lslpl   r11, r10, r8
 lsr     r2, r4, r12
 cmp     r9, #0
 lsr     r7, lr, r7
 movwpl  r2, #0
 subs    r1, r6, #96
 orr     r7, r7, r4, lsl, r0
 lslpl   r7, lr, r1
 cmp     r6, #64
 orrlo   r7, r11, r2
 cmp     r6, #0
 moveq   r7, r5
 rsb     r5, r12, #32
 lsr     r2, lr, r12
 cmp     r9, #0
 orr     r12, r2, r4, lsl, r5
 lsl     r2, r10, r6
 lsrpl   r12, r4, r9
 cmp     r8, #0
 movwpl  r2, #0
 cmp     r1, #0
 lsl     r5, lr, r0
 lsr     r1, lr, r9
 movwpl  r5, #0
 cmp     r6, #64
 orrlo   r5, r2, r12
 cmp     r6, #0
 moveq   r5, r10
 cmp     r8, #0
 lsr     r0, r5, #11
 orr     r10, r0, r7, lsl, #21
 lsl     r0, lr, r6
 mov     r11, #0
 movwpl  r0, #0
 cmp     r6, #64
 movhs   r0, r11
 orr     r1, r1, r4, lsl, r6
 cmp     r8, #0
 lsr     r2, r0, #11
 lslpl   r1, lr, r8
 cmp     r6, #64
 movhs   r1, r11
 lsr     r7, r7, #11
 orr     r2, r2, r1, lsl, #21
 orr     r6, r2, r0
 lsr     r0, r1, #11
 orr     r5, r0, r5, lsl, #21
 ldr     r0, [sp, #4]
 ldr     r1, [sp, #12]
 ldr     r2, [sp, #8]
 orr     r0, r0, r3
 orr     r1, r1, r2
 orrs    r0, r1, r0
 beq     <label>
 ldr     r1, [sp]
 movw    r0, #0
 movt    r0, #18384
 sub     r1, r0, r1, lsl, #20
 b       <label>
<label>:
 mov     r1, #0
<label>:
 mvn     r0, r10
 and     r0, r0, r5, lsr, #31
 subs    r0, r6, r0
 sbc     r0, r5, #0
 adds    r0, r10, r0, lsr, #31
 adc     r2, r7, #0
 adds    r0, r0, r11
 adc     r1, r2, r1
 and     r2, r3, #-2147483648
 orr     r1, r1, r2
 add     sp, sp, #16
 pop     {r4, r5, r6, r7, r8, r9, r10, r11, pc}
