floatconv::soft::u128_to_f32:
 push    {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, sp, #4
 mov     r8, r3
 mov     r3, r2
 clz     r7, r3
 cmp     r8, #0
 add     r12, r7, #32
 clz     r7, r0
 mov     r2, r1
 clzne   r12, r8
 add     r7, r7, #32
 cmp     r2, #0
 clzne   r7, r2
 orrs    r6, r3, r8
 addeq   r12, r7, #64
 mov     r1, r0
 and     lr, r12, #127
 rsb     r10, lr, #64
 rsbs    r11, lr, #32
 rsb     r5, r10, #32
 sub     r9, lr, #64
 lsr     r4, r0, r10
 lsl     r6, r3, lr
 orr     r5, r4, r2, lsl, r5
 lsl     r4, r0, r9
 lsrpl   r5, r2, r11
 subs    r7, lr, #32
 movwpl  r6, #0
 subs    r0, lr, #96
 movwpl  r4, #0
 cmp     lr, #64
 orrlo   r4, r6, r5
 cmp     lr, #0
 moveq   r4, r3
 lsl     r6, r1, lr
 cmp     r7, #0
 mov     r5, r4
 movwpl  r6, #0
 cmp     lr, #64
 orrlo   r5, r5, r6
 lsr     r6, r1, r11
 orr     r6, r6, r2, lsl, lr
 cmp     r7, #0
 lslpl   r6, r1, r7
 cmp     lr, #64
 orrlo   r5, r5, r6
 lsr     r6, r3, r11
 str     r0, [sp]
 orr     r0, r6, r8, lsl, lr
 rsb     r6, lr, #96
 cmp     r7, #0
 lslpl   r0, r3, r7
 ldr     r7, [sp]
 lsr     r6, r1, r6
 lsr     r10, r2, r10
 cmp     r11, #0
 orr     r6, r6, r2, lsl, r9
 movwpl  r10, #0
 cmp     r7, #0
 lslpl   r6, r1, r7
 cmp     lr, #64
 orrlo   r6, r0, r10
 cmp     lr, #0
 moveq   r6, r8
 lsr     r0, r4, #8
 orr     r0, r0, r6, lsl, #24
 cmp     r5, #0
 orr     r2, r2, r8
 orr     r1, r1, r3
 lsr     r7, r0, #31
 orrne   r0, r0, #1
 bic     r7, r7, r6, lsr, #8
 orrs    r1, r1, r2
 sub     r0, r0, r7
 movw    r7, #0
 movt    r7, #32384
 orr     r5, r7, #-2130706432
 mul     r5, r12, r5
 add     r5, r5, r6, lsr, #8
 add     r7, r5, r7
 lsreq   r7, r6, #8
 add     r0, r7, r0, lsr, #31
 add     sp, sp, #4
 pop     {r4, r5, r6, r7, r8, r9, r10, r11, pc}
