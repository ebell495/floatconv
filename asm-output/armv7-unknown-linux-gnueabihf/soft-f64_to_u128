floatconv::soft::f64_to_u128:
 movw    r2, #0
 rsbs    r3, r0, #0
 movt    r2, #32752
 sbcs    r2, r2, r1
 blo     <label>
 movw    r2, #0
 movt    r2, #18416
 cmp     r1, r2
 blo     <label>
 mvn     r0, #0
 mvn     r1, #0
 mvn     r2, #0
 mvn     r3, #0
 bx      lr
<label>:
 movw    r2, #0
 movt    r2, #16368
 cmp     r1, r2
 blo     <label>
 push    {r4, r5, r6, r7, r8, r9, r11, lr}
 mov     r2, #126
 lsl     r5, r0, #11
 sub     r2, r2, r1, lsr, #20
 lsl     r1, r1, #11
 and     r12, r2, #127
 orr     r0, r1, r0, lsr, #21
 orr     r3, r0, #-2147483648
 rsb     r1, r12, #32
 lsr     r2, r5, r12
 subs    r8, r12, #32
 orr     r2, r2, r3, lsl, r1
 sub     r9, r12, #64
 lsrpl   r2, r3, r8
 mov     lr, #0
 cmp     r12, #64
 rsb     r7, r12, #96
 movhs   r2, lr
 subs    r4, r12, #96
 rsb     r6, r12, #64
 lsr     r0, r5, r9
 orr     r7, r0, r3, lsl, r7
 lsrpl   r7, r3, r4
 lsl     r0, r5, r6
 cmp     r1, #0
 movwpl  r0, #0
 cmp     r12, #64
 movhs   r0, r7
 rsb     r7, r6, #32
 cmp     r12, #0
 moveq   r0, r12
 lsr     r7, r5, r7
 orr     r6, r7, r3, lsl, r6
 cmp     r1, #0
 lslpl   r6, r5, r1
 lsr     r1, r3, r9
 cmp     r4, #0
 lsr     r3, r3, r12
 movwpl  r1, #0
 cmp     r12, #64
 movlo   r1, r6
 cmp     r12, #0
 moveq   r1, r12
 cmp     r8, #0
 movwpl  r3, #0
 cmp     r12, #64
 movhs   r3, lr
 pop     {r4, r5, r6, r7, r8, r9, r11, pc}
<label>:
 mov     r0, #0
 mov     r1, #0
 mov     r2, #0
 mov     r3, #0
 bx      lr
